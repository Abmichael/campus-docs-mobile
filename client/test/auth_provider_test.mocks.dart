// Mocks generated by Mockito 5.4.5 from annotations
// in mit_mobile/test/auth_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mit_mobile/models/letter_template.dart' as _i6;
import 'package:mit_mobile/models/request.dart' as _i3;
import 'package:mit_mobile/models/user.dart' as _i4;
import 'package:mit_mobile/services/api_client.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequest_1 extends _i1.SmartFake implements _i3.Request {
  _FakeRequest_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_2 extends _i1.SmartFake implements _i4.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i2.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LoginResponse> login(Map<String, dynamic>? credentials) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [credentials],
        ),
        returnValue: _i5.Future<_i2.LoginResponse>.value(_FakeLoginResponse_0(
          this,
          Invocation.method(
            #login,
            [credentials],
          ),
        )),
      ) as _i5.Future<_i2.LoginResponse>);

  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i6.LetterTemplate>> getLetterTemplates() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLetterTemplates,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.LetterTemplate>>.value(<_i6.LetterTemplate>[]),
      ) as _i5.Future<List<_i6.LetterTemplate>>);

  @override
  _i5.Future<List<_i3.Request>> getRequests() => (super.noSuchMethod(
        Invocation.method(
          #getRequests,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Request>>.value(<_i3.Request>[]),
      ) as _i5.Future<List<_i3.Request>>);

  @override
  _i5.Future<_i3.Request> createRequest(_i3.Request? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRequest,
          [request],
        ),
        returnValue: _i5.Future<_i3.Request>.value(_FakeRequest_1(
          this,
          Invocation.method(
            #createRequest,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.Request>);

  @override
  _i5.Future<List<_i4.User>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i5.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i5.Future<List<_i4.User>>);

  @override
  _i5.Future<_i4.User> getUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [id],
        ),
        returnValue: _i5.Future<_i4.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getUser,
            [id],
          ),
        )),
      ) as _i5.Future<_i4.User>);
}
